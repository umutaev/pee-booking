import logging
from os import environ

from aiogram import Bot, Dispatcher
import aiogram

# Logging
logging.basicConfig(filename="bot.log", filemode="a", encoding="utf-8")

API_TOKEN = environ["PEE_BOOKING_BOT_TOKEN"]

# Bot
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def handle_start(message: aiogram.types.Message):
    keyboard_markup = aiogram.types.ReplyKeyboardMarkup(
        row_width=1, one_time_keyboard=True
    )
    keyboard_markup.row(aiogram.types.KeyboardButton("–•–æ—á—É —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥!üôà"))
    await message.reply(
        f"–í–µ—á–µ—Ä –≤ —Ö–∞—Ç—É, @{message.chat.username}.\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–Ω–ª–∞–π–Ω "
        "–≤—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –≤ –¥—É—à, —á—Ç–æ–±—ã –≤—Å–µ —É—Å–ø–µ–ª–∏ –ø–æ–π—Ç–∏ –ø–æ–¥ —Å—Ç—Ä—É—é –º—ã—Ç—å—Å—è, –≤–∞—à–∏ "
        "—Å–æ—Å–µ–¥–∏ –Ω–µ –æ—Ä–∞–ª–∏ –∫–∞–∫ –ë—Ä–∞—Ç–∏—à–∫–∞, –∞ –∫–æ–º–Ω–∞—Ç–∞ –Ω–µ –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∞—Å—å –≤ –≥–∞—É–ø–≤–∞—Ö—Ç—É.\n"
        "–ê —Ç–æ –ê—Ä—Å–µ–Ω–∏–π –í–æ—Ä–æ–Ω–∏–Ω –∫—É—Ä–ª—ã–∫–∞—Ç—å –Ω–∞—á–Ω—ë—Ç‚Ä¶\n–ù–∞–±–µ—Ä–∏—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        "—Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥",
        reply_markup=keyboard_markup,
    )


@dp.message_handler(commands=["help"])
@dp.message_handler(text=["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥!üôà", "–•–æ—á—É —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥!üôà"])
async def handle_help(message: aiogram.types.Message):
    keyboard_markup = aiogram.types.ReplyKeyboardMarkup(
        row_width=1, one_time_keyboard=True
    )
    buttons = (
        "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –¥—É—à üöø",
        "–í—ã–π—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ü§¢",
        "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚åö",
        "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥!üôà",
    )
    keyboard_markup.add(*(aiogram.types.KeyboardButton(text) for text in buttons))
    await message.reply(
        f"–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/help - –ø–æ–∫–∞–∑ —ç—Ç–æ–π –ø–æ–º–æ—â–∏\n"
        "/sign - –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –æ—á–µ—Ä–µ–¥—å <s>–Ω–∞ –ø—Ä–∏—ë–º –∫ –ê—Ä—Å–µ–Ω–∏—é –í–æ—Ä–æ–Ω–∏–Ω—É</s> –ø–æ–º—ã—Ç—å—Å—è\n"
        "/delete - –≤—ã–ø–∏—Å–∞—Ç—å—Å—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–¥ —Å—Ç—Ä—É—é (—Ç–æ–ª—å–∫–æ —ç—Ç–æ, —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–º–æ–π—Å—è, –æ–∫–µ–π?)\n"
        "/timetable - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥—É—à–∞",
        reply_markup=keyboard_markup,
        parse_mode=aiogram.types.ParseMode.HTML,
    )


@dp.message_handler(commands=["/timetable"])
def handle_timetable(message):
    ...
    # TODO: shower timetable


if __name__ == "__main__":
    aiogram.utils.executor.start_polling(dp)
